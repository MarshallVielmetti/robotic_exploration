<?xml version="1.0"?>
<robot name="my_mobile_robot" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Global Properties -->
    <xacro:property name="wheel_separation" value="0.5" />
    <xacro:property name="wheel_radius" value="0.15" />
    <xacro:property name="wheel_width" value="0.05" />
    <xacro:property name="body_length" value="1.0" />
    <xacro:property name="body_width" value="0.6" />
    <xacro:property name="body_height" value="0.2" />
    <xacro:property name="lidar_offset_z" value="0.3" /> <!-- lidar height above the body -->

    <!-- Macro to define a wheel -->
    <xacro:macro name="wheel" params="name mass ixx iyy izz">
        <link name="${name}">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder length="${wheel_width}" radius="${wheel_radius}" />
                </geometry>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder length="${wheel_width}" radius="${wheel_radius}" />
                </geometry>
            </collision>
            <inertial>
                <mass value="${mass}" />
                <origin xyz="0 0 0" rpy="0 0 0" />
                <inertia ixx="${ixx}" ixy="0.0" ixz="0.0" iyy="${iyy}" iyz="0.0" izz="${izz}" />
            </inertial>
        </link>
    </xacro:macro>

    <!-- Define the main body of the robot -->
    <link name="base_link">
        <visual>
            <!-- Shift the body upward so that wheels (assumed to be at ground level) are properly
            located -->
            <origin xyz="0 0 ${wheel_radius + body_height/2}" rpy="0 0 0" />
            <geometry>
                <box size="${body_length} ${body_width} ${body_height}" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 ${wheel_radius + body_height/2}" rpy="0 0 0" />
            <geometry>
                <box size="${body_length} ${body_width} ${body_height}" />
            </geometry>
        </collision>
        <inertial>
            <mass value="10.0" />
            <origin xyz="0 0 ${wheel_radius + body_height/2}" rpy="0 0 0" />
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1" />
        </inertial>
    </link>

    <!-- Create the wheels using the macro -->
    <xacro:wheel name="left_wheel" mass="1.0" ixx="0.001" iyy="0.001" izz="0.001" />
    <xacro:wheel name="right_wheel" mass="1.0" ixx="0.001" iyy="0.001" izz="0.001" />

    <!-- Attach left wheel -->
    <joint name="base_to_left_wheel" type="continuous">
        <parent link="base_link" />
        <child link="left_wheel" />
        <!-- Placing the left wheel at half of the body width plus half the wheel width -->
        <origin xyz="0 ${body_width/2 + wheel_width/2} ${wheel_radius}" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint>

    <!-- Attach right wheel -->
    <joint name="base_to_right_wheel" type="continuous">
        <parent link="base_link" />
        <child link="right_wheel" />
        <origin xyz="0 -${body_width/2 + wheel_width/2} ${wheel_radius}" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint>

    <!-- Define a lidar sensor mounted at center on top of the robot -->
    <link name="lidar">
        <visual>
            <origin xyz="0 0 ${wheel_radius + body_height + lidar_offset_z}" rpy="0 0 0" />
            <geometry>
                <!-- A simple cylinder to represent the lidar -->
                <cylinder length="0.05" radius="0.1" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 ${wheel_radius + body_height + lidar_offset_z}" rpy="0 0 0" />
            <geometry>
                <cylinder length="0.05" radius="0.1" />
            </geometry>
        </collision>
    </link>

    <!-- Mount the lidar on the base_link -->
    <joint name="base_to_lidar" type="fixed">
        <parent link="base_link" />
        <child link="lidar" />
        <!-- Adjust the origin if needed -->
        <origin xyz="0 0 ${body_height/2 + wheel_radius + lidar_offset_z}" rpy="0 0 0" />
    </joint>

</robot>